// Firestore Security Rules for Habit Tracker
// Deploy these rules to your Firestore database
// Go to Firestore Console > Rules and paste this content

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['createdAt', 'ownerId']) &&
             request.resource.data.ownerId == request.auth.uid;
    }
    
    function isValidCardData() {
      return request.resource.data.ownerId == request.auth.uid &&
             (
               // For creation: must have title and createdAt
               (request.resource.data.keys().hasAll(['title', 'createdAt']) && 
                request.resource.data.title is string &&
                request.resource.data.title.size() <= 100) ||
               // For updates: just need ownerId and updatedAt (title is optional)
               request.resource.data.keys().hasAny(['updatedAt', 'completions', 'progress', 'streak'])
             );
    }
    
    // User data - each user can only access their own data
    match /users/{userId} {
      // Allow access to the root user document for the owner
      allow read, write: if isOwner(userId);

      // User's habit cards
      match /cards/{cardId} {
        allow read, write: if isOwner(userId);
      }

      // Profile subcollection (users/{uid}/profile/info)
      match /profile/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Settings and preferences (some clients use settings/preferences)
      match /settings/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Backwards-compatible preferences path
      match /preferences/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Completions (recorded completion events)
      match /completions/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Categories
      match /categories/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Goals
      match /goals/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Analytics - allow owner to write/read analytics events
      match /analytics/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Public read-only data (app configuration, announcements, etc.)
    match /public/{document=**} {
      allow read: if true;
      allow write: if false; // Only admins via Firebase console
    }
    
    // App metadata and configuration
    match /config/{document=**} {
      allow read: if true;
      allow write: if false; // Only admins via Firebase console
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if false; // Only server-side functions
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
